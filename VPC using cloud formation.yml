AWSTemplateFormatVersion: 2010-09-09
Description: Creating a VPC with CloudFormation

Resources:
  cloudformationvpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 172.50.0.0/20
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: cloudformation

  publicsubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref cloudformationvpc
      AvailabilityZone: us-east-1b
      CidrBlock: 172.50.0.0/24
      Tags:
        - Key: Name
          Value: cloudformation-public-1

  publicsubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref cloudformationvpc
      AvailabilityZone: us-east-1b
      CidrBlock: 172.50.1.0/24
      Tags:
        - Key: Name
          Value: cloudformation-public-2

  privatesubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref cloudformationvpc
      AvailabilityZone: us-east-1b
      CidrBlock: 172.50.2.0/24
      Tags:
        - Key: Name
          Value: cloudformation-private-1

  privatesubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref cloudformationvpc
      AvailabilityZone: us-east-1b
      CidrBlock: 172.50.3.0/24
      Tags:
        - Key: Name
          Value: cloudformation-private-2

  publicroutetable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref cloudformationvpc
      Tags:
        - Key: Name
          Value: cloudformation-public-routetable

  publicsubnet1routetableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref publicroutetable
      SubnetId: !Ref publicsubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref publicroutetable
      SubnetId: !Ref publicsubnet2

  privateroutetable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref cloudformationvpc
      Tags:
        - Key: Name
          Value: cloudformation-private-routetable

  privatesubnet1routetableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref privateroutetable
      SubnetId: !Ref privatesubnet1
  
  privatesubnet2routeTableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref privateroutetable
      SubnetId: !Ref privatesubnet2


  cloudformationinternetgateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: clouformation-internetgateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref cloudformationinternetgateway
      VpcId: !Ref cloudformationvpc

  myRoute1:
    Type: AWS::EC2::Route
    #DependsOn: GatewayToInternet
    Properties:
       RouteTableId:
         Ref: publicroutetable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: cloudformationinternetgateway

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref publicsubnet1

  myRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref privateroutetable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  publicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: !Ref cloudformationvpc
  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: publicNACL
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
       PortRange:
         From: 22
         To: 22
  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: publicNACL
       RuleNumber: 100
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0  


  privateNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: !Ref cloudformationvpc 
  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: privateNACL
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 172.50.0.0/24
       PortRange:
         From: 22
         To: 22
  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: privateNACL
       RuleNumber: 100
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  PublicSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref publicsubnet1
      NetworkAclId: !Ref publicNACL

  publicsubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref publicsubnet2
      NetworkAclId: !Ref publicNACL

  PrivateSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref privatesubnet1
      NetworkAclId: !Ref privateNACL

  PrivateSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref privatesubnet2
      NetworkAclId: !Ref privateNACL


